{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lateness","displayEvent","hour","minute","meridian","eventKind","setHour","bind","assertThisInitialized","setMinute","setMeridian","setEventKind","checkFashionablyLateness","time","fashionablylate","setState","event","target","value","react_default","a","createElement","className","style","float","onChange","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7e54eaa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport fashionablylate from 'fashionablylate';\n\n//TODO pull in messages from fashionablylate 1.7.2\n//TODO consider doing a fade-out and fade-in to show change\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {lateness: '', displayEvent: '', hour: '12', minute: '00', meridian: 'am', eventKind: 'general'};\n\t\tthis.setHour = this.setHour.bind(this);\n\t\tthis.setMinute = this.setMinute.bind(this);\n\t\tthis.setMeridian = this.setMeridian.bind(this);\n\t\tthis.setEventKind = this.setEventKind.bind(this);\n\t\tthis.checkFashionablyLateness = this.checkFashionablyLateness.bind(this);\n\t}\t\n\n\tcheckFashionablyLateness() {\n\t\tvar time = this.state.hour + ':' + this.state.minute + ' ' + this.state.meridian;\n\t\tvar lateness = fashionablylate(time, this.state.eventKind);\n\t\tthis.setState({\n\t\t\tlateness: lateness,\n\t\t\tdisplayEvent: this.state.eventKind\n\t\t});\n\t}\n\n\tsetHour(event) {\n\t\tthis.setState({\n\t\t\thour: event.target.value\n\t\t});\n\t}\n\n\tsetMinute(event) {\n\t\tthis.setState({\n\t\t\tminute: event.target.value\n\t\t});\n\t}\n\n\tsetMeridian(event) {\n\t\tthis.setState({\n\t\t\tmeridian: event.target.value\n\t\t});\n\t}\n\n\tsetEventKind(event) {\n\t\tthis.setState({\n\t\t\teventKind: event.target.value\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFashionably Late\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tevent: {this.state.displayEvent}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tresult: {this.state.lateness}\n\t\t\t\t\t</p>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"App-content\">\n\t\t\t\t\t<div className=\"App-time\">\n\t\t\t\t\t\t<select className=\"App-hour\" style={{float:'left'}} onChange={this.setHour} >\n\t\t\t\t\t\t\t<option>12</option>\n\t\t\t\t\t\t\t<option>1</option>\n\t\t\t\t\t\t\t<option>2</option>\n\t\t\t\t\t\t\t<option>3</option>\n\t\t\t\t\t\t\t<option>4</option>\n\t\t\t\t\t\t\t<option>5</option>\n\t\t\t\t\t\t\t<option>6</option>\n\t\t\t\t\t\t\t<option>7</option>\n\t\t\t\t\t\t\t<option>8</option>\n\t\t\t\t\t\t\t<option>9</option>\n\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t<option>11</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<select className=\"App-minute\" style={{float:'left'}} onChange={this.setMinute} >\n\t\t\t\t\t\t\t<option>00</option>\n\t\t\t\t\t\t\t<option>05</option>\n\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t\t<option>30</option>\n\t\t\t\t\t\t\t<option>35</option>\n\t\t\t\t\t\t\t<option>40</option>\n\t\t\t\t\t\t\t<option>45</option>\n\t\t\t\t\t\t\t<option>50</option>\n\t\t\t\t\t\t\t<option>55</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<select className=\"App-meridian\" style={{float:'left'}} onChange={this.setMeridian} >\n\t\t\t\t\t\t\t<option>am</option>\n\t\t\t\t\t\t\t<option>pm</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-event-container\">\n\t\t\t\t\t\t<select className=\"App-event\" style={{float:'clear'}} onChange={this.setEventKind} >\n\t\t\t\t\t\t\t<option>general</option>\n\t\t\t\t\t\t\t<option>fundraiser</option>\n\t\t\t\t\t\t\t<option>gala</option>\n\t\t\t\t\t\t\t<option>party</option>\n\t\t\t\t\t\t\t<option>dinner party</option>\n\t\t\t\t\t\t\t<option>bridal shower</option>\n\t\t\t\t\t\t\t<option>baby shower</option>\n\t\t\t\t\t\t\t<option>wedding</option>\n\t\t\t\t\t\t\t<option>funeral</option>\n\t\t\t\t\t\t\t<option>graduation</option>\n\t\t\t\t\t\t\t<option>play</option>\n\t\t\t\t\t\t\t<option>church service</option>\n\t\t\t\t\t\t\t<option>job interview</option>\n\t\t\t\t\t\t\t<option>symphony</option>\n\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-button-container\">\n\t\t\t\t\t\t<button className=\"App-check\" onClick={this.checkFashionablyLateness} >check</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}